XML在SOA中的用途：
    1、作为服务计算的元语言：描述服务、通过描述需求寻找和调用服务、服务计算中的其它信息交换
    （服务通过XML进行publish discover invoke）
    2、XML通常被用于电子信息交换（一些域-(商业)相关的功能执行时，将信息进行编码，在软件单元之间进行传递）

电子信息交换的常见上下文：
    1、应用内部 - 信息从一个部分传递到另一个部分
    2、应用之间 - 信息从一个应用传递到另一个应用
    3、公司之间 - 信息在两个公司之间进行传递
    4、系统之间 - 在一个公司内部的不同系统之间进行传递

XML信息传递需要注意数据类型的问题：
    1、一般使用XML Schema来进行数据的验证
    2、一系列的Schema组成了数据类型标准

DOM Parser：
    特点：Document Object Model、需要将整个XML读取并解析、将数据模型转换为对象模型、每一个对象都被作为一个node
    过程：创建DOM Parser、读取XML创建字典、反馈读取的过程中遇到的问题、构造DOM树、DOM树操作、XML输出
    注意：在一个节点之前或之后可能有White Space节点，最上层的是DocumentElement节点，代表整个DOM树
    操作：详见DOMParserPractice.java 
    
SAX Parser：
    特点：基于事件的parser、简单高效、需要记录Parser的状态，创建隐式树（[start某元素]下移一层，[end某元素]上移一层）
    使用环境：XML很大，需要精确控制Parse的过程、系统资源很少、需要很高的效率
    过程：互相联系的三个过程：Paser创建和配置、内容处理、错误处理（提供了接口需要重写）
    状态记录：当前元素，当前元素的父亲、祖父元素，邻居数量，已经发现的邻居
    注意：这种Parser要求应用必须知道XML的结构
    常见的处理方法：使用整数标识元素层次、使用栈结构辅助、构造自己的小型的DOM树

XSL(eXtensible Stylesheet Language 可扩展样式表语言)：
    目标是以可读的形式展现XML，XSL之于XML相当于CSS之于HTML
    XSL发展到现在包括3个内容：XSLT（转换语言），XPath（寻址语言），Formatting Objects（识别格式语义的XML字典）
    XSLT：将一种格式的XML转换为另一种格式，目标格式可以是HTML、文本、一些特殊个事的对象比如图片等
          特点：XML语法、平台无关、基于模式匹配准则、闭包（输入和输出的数据结构相同）、可递归
    XPath：以路径的方式进行XML文档元素的定位
    
XPath：
    XPath节点术语：Node、Atomic Value、Parent、Children、Siblings、Ancestor、Descendant
    Step：.../axis::nodetag[predicate]/...
        axis（轴）：定义相对于当前节点的节点集
        nodetag：内含节点的标记
        predicate：可选的节点过滤器，多个predicate可以并列
    使用一般的语法也可以完成轴的功能
    predicate函数，用的时候再查

XSLT：
    转换过程：选择符合Pattern的节点、选择模板、转换、生成结果 / 继续匹配Pattern
    组成元素：XML文档标识、xls:stylesheet根元素、文档顶级元素例如inport等、模板、处理过程
    template元素：match的值为XPath，为模板匹配一个元素
    apply-templates元素：选择当前元素的所有孩子，并且为每一个孩子元素都选择模板来匹配，默认执行value-of操作
    call-template元素：模板引用（对于模板可指定name属性，然后在call-template元素中将name设为需要引用的模板）
    for-each元素：包含select属性，属性值为XPath，遍历选中的元素，应用以下的模板
    if元素：包含test属性，值为XPath（XPath中有一些条件函数也可以使用）,使用的例子：给元素之间加上逗号
    choose元素：其中包含when、otherwise元素，相当于switch的效果，when相当于case，otherwise相当于default
    value-of元素：包含select属性，对指定元素进行取值操作
    element元素：自行创建一个元素，其中还可以包含其它element或attribute，可以方便地实现xml到xml的转换？
    使用eclipse转换xml到html好像有问题。。。

XSLT的高端用法：
    number元素：常用于给元素进行编号，可以指定编号的模式、受影响的元素、深度
    sort元素：一般和for-each之中使用，属性包括order、lang、data-type、case-order
    属性值模板：{/student/@schoolId} 直接可以取到属性的值，还可以出现再双引号之间
    variable元素：其中使用value-of进行变量声明，使用$name来进行变量使用，variable一经声明就不可改变
    param元素和with-param元素：和variable作用类似，还可以实现公共命名变量，做到逻辑和数据分离
